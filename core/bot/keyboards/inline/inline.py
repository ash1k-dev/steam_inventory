from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardMarkup

from config import ITEMS_LIMIT, TOP_ITEMS_AMOUNT
from core.bot.keyboards.inline.callback_factory import (
    GamesCallbackFactory,
    GamesTrackCallbackFactory,
    ItemsCallbackFactory,
    ItemsTrackCallbackFactory,
    SteamidCallbackFactory,
)


def get_steams_menu(steam_id_list: list) -> InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å–æ —Å–ø–∏—Å–∫–æ–º Steam id"""
    keyboard_builder = InlineKeyboardBuilder()
    for steam_id, name in steam_id_list:
        keyboard_builder.button(
            text=name,
            callback_data=SteamidCallbackFactory(
                action="steamid",
                steam_name=name,
                steam_id=steam_id,
            ),
        )
    keyboard_builder.button(
        text="–î–æ–±–∞–≤–∏—Ç—å ü™Ñ", callback_data=SteamidCallbackFactory(action="add_steam_id")
    )
    keyboard_builder.adjust(1)
    return keyboard_builder.as_markup()


def get_control_menu(steamid_name: str, steamid_id) -> InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Steam id"""
    keyboard_builder = InlineKeyboardBuilder()
    keyboard_builder.button(
        text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
        callback_data=SteamidCallbackFactory(
            action="info",
            steam_name=steamid_name,
            steam_id=steamid_id,
        ),
    )
    keyboard_builder.button(
        text="–£–¥–∞–ª–∏—Ç—å",
        callback_data=SteamidCallbackFactory(
            action="delete",
            steam_name=steamid_name,
            steam_id=steamid_id,
        ),
    )
    keyboard_builder.adjust(1)
    return keyboard_builder.as_markup()


def get_steam_id_menu(steamid_name, steamid_id) -> InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ Steam id"""
    keyboard_builder = InlineKeyboardBuilder()
    keyboard_builder.button(
        text="–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å",
        callback_data=ItemsCallbackFactory(
            action="info",
            steam_name=steamid_name,
            steam_id=steamid_id,
        ),
    )
    keyboard_builder.button(
        text="–ò–≥—Ä—ã",
        callback_data=GamesCallbackFactory(
            action="info",
            steam_name=steamid_name,
            steam_id=steamid_id,
        ),
    )
    keyboard_builder.button(
        text="–ù–∞–∑–∞–¥",
        callback_data=SteamidCallbackFactory(
            action="steamid",
            steam_name=steamid_name,
            steam_id=steamid_id,
        ),
    )
    keyboard_builder.adjust(1)
    return keyboard_builder.as_markup()


def get_games_menu(steam_id, steam_name) -> InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∏–≥—Ä"""
    keyboard_builder = InlineKeyboardBuilder()
    keyboard_builder.button(
        text=f"–¢–û–ü {TOP_ITEMS_AMOUNT} –ø–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏",
        callback_data=GamesCallbackFactory(
            action="time",
            steam_name=steam_name,
            steam_id=steam_id,
            page=0,
            order="time",
            limit=TOP_ITEMS_AMOUNT,
        ),
    )
    keyboard_builder.button(
        text=f"–¢–û–ü {TOP_ITEMS_AMOUNT} –ø–æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏",
        callback_data=GamesCallbackFactory(
            action="cost",
            steam_name=steam_name,
            steam_id=steam_id,
            page=0,
            order="cost",
            limit=TOP_ITEMS_AMOUNT,
        ),
    )
    keyboard_builder.button(
        text="–í—Å–µ –∏–≥—Ä—ã",
        callback_data=GamesCallbackFactory(
            action="all",
            steam_name=steam_name,
            steam_id=steam_id,
            page=0,
            order="time",
            limit=ITEMS_LIMIT,
        ),
    )
    keyboard_builder.button(
        text="–ù–∞–∑–∞–¥",
        callback_data=SteamidCallbackFactory(
            action="info", steam_name=steam_name, steam_id=steam_id
        ),
    )
    keyboard_builder.adjust(1)
    return keyboard_builder.as_markup()


def get_games_back_menu(steam_id, steam_name) -> InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞"""
    keyboard_builder = InlineKeyboardBuilder()
    keyboard_builder.button(
        text="–ù–∞–∑–∞–¥",
        callback_data=GamesCallbackFactory(
            action="info",
            steam_name=steam_name,
            steam_id=steam_id,
        ),
    )
    keyboard_builder.adjust(1)
    return keyboard_builder.as_markup()


def get_items_menu(steam_id: int, steam_name: str) -> InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤"""
    keyboard_builder = InlineKeyboardBuilder()
    keyboard_builder.button(
        text=f"–¢–û–ü {TOP_ITEMS_AMOUNT} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ø–æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏",
        callback_data=ItemsCallbackFactory(
            # action="cost",
            steam_name=steam_name,
            steam_id=steam_id,
            page=0,
            order="cost",
            limit=TOP_ITEMS_AMOUNT,
        ),
    )
    keyboard_builder.button(
        text=f"–¢–û–ü {TOP_ITEMS_AMOUNT} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ø–æ –ø—Ä–∏—Ä–æ—Å—Ç—É —Å—Ç–æ–∏–º–æ—Å—Ç–∏",
        callback_data=ItemsCallbackFactory(
            # action="gain",
            steam_name=steam_name,
            steam_id=steam_id,
            page=0,
            order="difference",
            limit=TOP_ITEMS_AMOUNT,
        ),
    )
    keyboard_builder.button(
        text="–í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã",
        callback_data=ItemsCallbackFactory(
            action="all",
            steam_name=steam_name,
            steam_id=steam_id,
            page=0,
            order="cost",
            limit=ITEMS_LIMIT,
        ),
    )
    keyboard_builder.button(
        text="–ù–∞–∑–∞–¥",
        callback_data=SteamidCallbackFactory(
            action="info", steam_name=steam_name, steam_id=steam_id
        ),
    )
    keyboard_builder.adjust(1)
    return keyboard_builder.as_markup()


def get_pagination(
    page,
    steam_name,
    steam_id,
    # action,
    pages_amount,
    callbackfactory,
    limit=None,
    order=None,
) -> InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏"""
    keyboard_builder = InlineKeyboardBuilder()
    if page == 0:
        keyboard_builder.button(text=f"{page+1}/{pages_amount}", callback_data="null")
        keyboard_builder.button(
            text="Next",
            callback_data=callbackfactory(
                steam_name=steam_name,
                steam_id=steam_id,
                page=page + 1,
                pages_amount=pages_amount,
                limit=limit,
                order=order,
            ),
        )
        keyboard_builder.button(
            text="–ù–∞–∑–∞–¥",
            callback_data=callbackfactory(
                action="back",
                steam_name=steam_name,
                steam_id=steam_id,
            ),
        )
        keyboard_builder.adjust(2, 1, repeat=True)
    if page == pages_amount - 1:
        keyboard_builder.button(
            text="Previous",
            callback_data=callbackfactory(
                steam_name=steam_name,
                steam_id=steam_id,
                page=page - 1,
                pages_amount=pages_amount,
                limit=limit,
                order=order,
            ),
        )
        keyboard_builder.button(text=f"{page+1}/{pages_amount}", callback_data="null")
        keyboard_builder.button(
            text="–ù–∞–∑–∞–¥",
            callback_data=callbackfactory(
                action="back",
                steam_name=steam_name,
                steam_id=steam_id,
            ),
        )
        keyboard_builder.adjust(2, 1, repeat=True)
    elif page > 0:
        keyboard_builder.button(
            text="Previous",
            callback_data=callbackfactory(
                # action=action,
                steam_name=steam_name,
                steam_id=steam_id,
                page=page - 1,
                pages_amount=pages_amount,
                limit=limit,
                order=order,
            ),
        )
        keyboard_builder.button(text=f"{page+1}/{pages_amount}", callback_data="null")
        keyboard_builder.button(
            text="Next",
            callback_data=callbackfactory(
                # action=action,
                steam_name=steam_name,
                steam_id=steam_id,
                page=page + 1,
                pages_amount=pages_amount,
                limit=limit,
                order=order,
            ),
        )
        keyboard_builder.button(
            text="–ù–∞–∑–∞–¥",
            callback_data=callbackfactory(
                action="back",
                steam_name=steam_name,
                steam_id=steam_id,
            ),
        )
        keyboard_builder.adjust(3, 1, repeat=True)
    return keyboard_builder.as_markup()


def get_items_back_menu(steam_id, steam_name) -> InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞"""
    keyboard_builder = InlineKeyboardBuilder()
    keyboard_builder.button(
        text="–ù–∞–∑–∞–¥",
        callback_data=ItemsCallbackFactory(
            action="info",
            steam_name=steam_name,
            steam_id=steam_id,
        ),
    )
    keyboard_builder.adjust(1)
    return keyboard_builder.as_markup()


def get_tracking_games_menu(tracking_games_list: list) -> InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∏–≥—Ä"""
    keyboard_builder = InlineKeyboardBuilder()
    for name, game_id, first_game_cost, game_cost in tracking_games_list:
        keyboard_builder.button(
            text=name,
            callback_data=GamesTrackCallbackFactory(
                action="tracking_game",
                game_id=game_id,
            ),
        )
    keyboard_builder.button(
        text="–î–æ–±–∞–≤–∏—Ç—å ü™Ñ",
        callback_data=GamesTrackCallbackFactory(action="add_tracking_game"),
    )
    keyboard_builder.adjust(1)
    return keyboard_builder.as_markup()


def get_confirm_tracking_game_menu(game_id) -> InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–≥—Ä—ã"""
    keyboard_builder = InlineKeyboardBuilder()
    keyboard_builder.button(
        text="–î–∞",
        callback_data=GamesTrackCallbackFactory(
            action="add_tracking_game_confirm", game_id=game_id
        ),
    )
    keyboard_builder.button(
        text="–ù–µ—Ç",
        callback_data=GamesTrackCallbackFactory(action="add_tracking_game_not_confirm"),
    )
    keyboard_builder.adjust(1)
    return keyboard_builder.as_markup()


def get_control_menu_tracking_game(game_id: int) -> InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º–æ–∏ÃÜ –∏–≥—Ä–æ–∏ÃÜ"""
    keyboard_builder = InlineKeyboardBuilder()
    keyboard_builder.button(
        text="–£–¥–∞–ª–∏—Ç—å",
        callback_data=GamesTrackCallbackFactory(
            action="delete",
            game_id=game_id,
        ),
    )
    keyboard_builder.adjust(1)
    return keyboard_builder.as_markup()


def get_confirm_tracking_item_menu(item_id) -> InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞"""
    keyboard_builder = InlineKeyboardBuilder()
    keyboard_builder.button(
        text="–î–∞",
        callback_data=ItemsTrackCallbackFactory(
            action="add_tracking_item_confirm", item_id=item_id
        ),
    )
    keyboard_builder.button(
        text="–ù–µ—Ç",
        callback_data=ItemsTrackCallbackFactory(action="add_tracking_item_not_confirm"),
    )
    keyboard_builder.adjust(1)
    return keyboard_builder.as_markup()


def get_control_menu_tracking_items(item_id: int) -> InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–º –ø—Ä–µ–¥–º–µ—Ç–æ–º"""
    keyboard_builder = InlineKeyboardBuilder()
    keyboard_builder.button(
        text="–£–¥–∞–ª–∏—Ç—å",
        callback_data=ItemsTrackCallbackFactory(
            action="delete",
            item_id=item_id,
        ),
    )
    keyboard_builder.adjust(1)
    return keyboard_builder.as_markup()


def get_tracking_items_menu(tracking_items_list: list) -> InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤"""
    keyboard_builder = InlineKeyboardBuilder()
    for name, item_id, first_item_cost, item_cost in tracking_items_list:
        keyboard_builder.button(
            text=name,
            callback_data=ItemsTrackCallbackFactory(
                action="tracking_item",
                item_id=item_id,
            ),
        )
    keyboard_builder.button(
        text="–î–æ–±–∞–≤–∏—Ç—å ü™Ñ",
        callback_data=ItemsTrackCallbackFactory(action="add_tracking_item"),
    )
    keyboard_builder.adjust(1)
    return keyboard_builder.as_markup()
